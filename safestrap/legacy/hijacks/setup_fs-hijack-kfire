#!/sbin/bbx sh
# By: Hashcode
# Last Editted: 11/07/2012
PATH=/system/xbin:/system/bin:/sbin
BLOCK_DIR=/dev/block
BLOCKNAME_DIR=$BLOCK_DIR/platform/omap/omap_hsmmc.1/by-name

# SS3 Setup
SYS_MNT=/s2
USER_MNT=/datamedia
IMG_TYPE=ext4
SS_MNT=/ss

RECOVERY_DIR=/system/etc/safestrap
SS_DIR=$SS_MNT/safestrap
ALT_SYSTEM_MODE="0"
HIJACK_BIN=setup_fs

# create SS loopdevs
/sbin/bbx mknod -m600 /dev/block/loop-system b 7 99
/sbin/bbx mknod -m600 /dev/block/loop-userdata b 7 98
/sbin/bbx mknod -m600 /dev/block/loop-cache b 7 97

# create safestrap mount point
/sbin/bbx mkdir $SS_MNT
/sbin/bbx chown 0.2000 $SS_MNT
/sbin/bbx chmod 777 $SS_MNT
/sbin/bbx mkdir $SYS_MNT
/sbin/bbx chown 0.2000 $SYS_MNT
/sbin/bbx chmod 777 $SYS_MNT
/sbin/bbx mkdir $USER_MNT
/sbin/bbx chown 0.2000 $USER_MNT
/sbin/bbx chmod 777 $USER_MNT

# stop the servicemanager service from starting
/sbin/bbx mount -o remount,rw /system
/sbin/bbx mv /system/bin/servicemanager /system/bin/servicemanager.bin
setprop ctl.stop servicemanager
#setprop ctl.disabled surfaceflinger
#setprop ctl.disabled bootanim
#setprop ctl.disabled media
#setprop ctl.disabled zygote
#setprop ctl.disabled drm

# userdata is already mounted here
# mount safestrap partition
/sbin/bbx mount /data/media $SS_MNT

if [ ! -d "$SS_DIR" ]; then
	/sbin/bbx mkdir -p $SS_DIR
fi
if [ ! -f "$SS_DIR/active_slot" ]; then
	/sbin/bbx echo "stock" > $SS_DIR/active_slot
fi
SLOT_LOC=$(/sbin/bbx cat $SS_DIR/active_slot)
if [ -f "$SS_DIR/$SLOT_LOC/system.img" ] && [ -f "$SS_DIR/$SLOT_LOC/userdata.img" ] && [ -f "$SS_DIR/$SLOT_LOC/cache.img" ]; then
	ALT_SYSTEM_MODE="1"
fi

# check for .recovery_mode on current /data mount
if [ "$ALT_SYSTEM_MODE" = "1" ]; then
	# setup loopback
	/sbin/bbx losetup $BLOCK_DIR/loop-userdata $SS_DIR/$SLOT_LOC/userdata.img
	/sbin/bbx mount -t $IMG_TYPE $BLOCK_DIR/loop-userdata $USER_MNT
	if [ -f $USER_MNT/.recovery_mode ]; then
		/sbin/bbx rm $USER_MNT/.recovery_mode
		ALT_SYSTEM_MODE="2"
	fi
	/sbin/bbx umount $USER_MNT
	/sbin/bbx losetup -d $BLOCK_DIR/loop-userdata
else
	if [ -f /data/.recovery_mode ]; then
		/sbin/bbx rm /data/.recovery_mode
		ALT_SYSTEM_MODE="2"
	fi
fi

/sbin/bbx insmod /system/lib/modules/atmel_mxt_ts.ko
/sbin/bbx sleep 2

if [ "$ALT_SYSTEM_MODE" = "2" ] || [ $($RECOVERY_DIR/safestrapmenu $ALT_SYSTEM_MODE > /dev/null 2>&1;echo $?) -eq 0 ]; then
	/sbin/bbx unzip -o $RECOVERY_DIR/2nd-init.zip -d /sbin
	/sbin/bbx chmod 750 /sbin/*

	# pre-cleanup
	/sbin/bbx rm /etc
	/sbin/bbx mkdir /etc
	/sbin/bbx chmod 755 /etc

	# move bins out of the way
	/sbin/bbx mv /sbin/adbd /sbin/adbd.old
	/sbin/bbx mv /init /init.old

	# extract recovery ramdisk
	/sbin/bbx cd /
	/sbin/bbx unzip -o $RECOVERY_DIR/recovery.zip -d /
	/sbin/bbx cd /sbin
	/sbin/bbx ln -s /sbin/busybox /sbin/sh
	/sbin/bbx chmod -R 755 /res/*
	/sbin/bbx chmod 644 /default.prop
	/sbin/bbx chmod -R 755 /charger/*
	/sbin/bbx chmod -R 755 /etc/*
	/sbin/bbx chmod 755 /init
	/sbin/bbx chmod 755 /*.rc
	/sbin/bbx chmod 755 /*.sh
	/sbin/bbx chmod -R 755 /sbin/*

	# setup translate table
	# echo `busybox ls -l $BLOCKNAME_DIR/ | busybox grep system | busybox tail -c 21`=system
	/sbin/bbx echo `/sbin/bbx ls -l $BLOCKNAME_DIR/ | /sbin/bbx grep system | /sbin/bbx tail -c 22`=$BLOCKNAME_DIR/system > $SS_DIR/translate
	/sbin/bbx echo `/sbin/bbx ls -l $BLOCKNAME_DIR/ | /sbin/bbx grep userdata | /sbin/bbx tail -c 22`=$BLOCKNAME_DIR/userdata >> $SS_DIR/translate
	/sbin/bbx echo `/sbin/bbx ls -l $BLOCKNAME_DIR/ | /sbin/bbx grep cache | /sbin/bbx tail -c 22`=$BLOCKNAME_DIR/cache >> $SS_DIR/translate
	# meager attempt at stopping writes to the boot device
	/sbin/bbx echo `/sbin/bbx ls -l $BLOCKNAME_DIR/ | /sbin/bbx grep boot | /sbin/bbx tail -c 22`=/dev/null >> $SS_DIR/translate
	/sbin/bbx echo $BLOCKNAME_DIR/boot=/dev/null >> $SS_DIR/translate

	# unmount partitions
	/sbin/bbx umount $SS_MNT
	# fix the servicemanager service
	/sbin/bbx mv /system/bin/servicemanager.bin /system/bin/servicemanager
	/sbin/bbx umount -l /system

	/sbin/hijack.killall setup_fs

	/sbin/bbx kill $(/sbin/bbx ps | /sbin/bbx grep tf_daemon)
	/sbin/bbx kill $(/sbin/bbx ps | /sbin/bbx grep hdcp-test)

	/sbin/bbs sleep 1

	# filesystem cleanup
	/sbin/bbx rm /sdcard
	/sbin/bbx rm /sdcard-ext
	/sbin/bbx rm -rf /mnt
	/sbin/bbx rm /vendor
	/sbin/bbx rm /d
	/sbin/bbx rm /tmp
	/sbin/bbx mkdir /tmp

	/sbin/taskset -p -c 0 1
	/sbin/bbx sync
	/sbin/taskset -c 0 /sbin/2nd-init
	exit
fi

# check for active virtual system
if [ "$ALT_SYSTEM_MODE" = "1" ]; then
	/sbin/bbx unzip -o $RECOVERY_DIR/2nd-init.zip -d /sbin
	/sbin/bbx chmod 750 /sbin/*

	# setup loopback
	/sbin/bbx losetup $BLOCK_DIR/loop-system $SS_DIR/$SLOT_LOC/system.img
	/sbin/bbx mount -t $IMG_TYPE $BLOCK_DIR/loop-system $SYS_MNT

	# check for hijacks, and remove
	if [ -f "$SYS_MNT/bin/$HIJACK_BIN.bin" ]; then
		/sbin/bbx rm $SYS_MNT/bin/$HIJACK_BIN
		/sbin/bbx mv $SYS_MNT/bin/$HIJACK_BIN.bin $SYS_MNT/bin/$HIJACK_BIN
		/sbin/bbx chmod 755 $SYS_MNT/bin/$HIJACK_BIN
		/sbin/bbx chown 0.2000 $SYS_MNT/bin/$HIJACK_BIN
	fi

	# check for kexec files
	if [ -d "$SYS_MNT/etc/kexec" ]; then
		/sbin/bbx cp $SYS_MNT/etc/kexec/* /

		# unmount new /system
		/sbin/bbx umount $SYS_MNT
		/sbin/bbx losetup -d $BLOCK_DIR/loop-system
		/sbin/bbx umount $SS_MNT

		/sbin/hijack.killall setup_fs

		/sbin/bbx cd /
		/sbin/bbx chmod 755 /kexec
		/sbin/bbx chown 0.2000 /kexec
		/sbin/bbx insmod /uart.ko
		/sbin/bbx insmod /arm_kexec.ko
		/sbin/bbx insmod /kexec.ko
		/kexec -l /kernel --devtree=/devtree --ramdisk=/ramdisk.img
		/sbin/bbx sleep 1
		/kexec -e
		exit
	fi

	# if there's a ramdisk then extract it
	if [ -d "$SYS_MNT/etc/rootfs" ]; then
		if [ -f "$SYS_MNT/etc/rootfs/sbin/adbd" ]; then
			/sbin/bbx mv /sbin/adbd /sbin/adbd.old
		fi
		if [ -f "$SYS_MNT/etc/rootfs/init" ]; then
			/sbin/bbx mv /init /init.old
		fi
		/sbin/bbx cp -R $SYS_MNT/etc/rootfs/* /
	fi

	# adjust stock init.rc file to include /sbin/fixboot.sh
	/sbin/bbx cat /init.rc | /sbin/bbx sed "s/on init/on init\nexec \/sbin\/fixboot.sh/" > /init.rc.new0
	/sbin/bbx cat /init.rc.new0 | /sbin/bbx sed "s/mount cgroup none/#mount cgroup none/" > /init.rc.new1
	/sbin/bbx cat /init.rc.new1 | /sbin/bbx sed "s/mount tmpfs tmpfs/#mount tmpfs tmpfs/" > /init.rc.new2
	/sbin/bbx mv /init.rc /init.rc.old
	/sbin/bbx mv /init.rc.new2 /init.rc
	/sbin/bbx rm /init.rc.new*

	# adjust init.<hardware>.rc for where to mount /sdcard
	/sbin/bbx cat /init.bowser.rc | /sbin/bbx sed "s/service sdcard \/system\/bin\/sdcard \/data\/media/service sdcard \/system\/bin\/sdcard \/datamedia\/media/" > /init.bowser.rc.new0
	/sbin/bbx mv /init.bowser.rc.new0 /init.bowser.rc
	/sbin/bbx cat /init.omap4blazeboard.rc | /sbin/bbx sed "s/service sdcard \/system\/bin\/sdcard \/data\/media/service sdcard \/system\/bin\/sdcard \/datamedia\/media/" > /init.omap4blazeboard.rc.new0
	/sbin/bbx mv /init.omap4blazeboard.rc.new0 /init.omap4blazeboard.rc

	# reset permissions
	/sbin/bbx chmod -R 750 /sbin/*
	/sbin/bbx chmod 755 /init
	/sbin/bbx chmod 755 /charger
	/sbin/bbx chmod 644 /default.prop
	/sbin/bbx chmod 755 /*.rc
	/sbin/bbx chmod 755 /*.sh

	# unmount new /system
	/sbin/bbx umount $SYS_MNT
	/sbin/bbx losetup -d $BLOCK_DIR/loop-system
	/sbin/bbx umount $SS_MNT

	# fix the servicemanager service
	/sbin/bbx mv /system/bin/servicemanager.bin /system/bin/servicemanager

	# unmount old /system
	/sbin/bbx umount -l /system

	/sbin/hijack.killall setup_fs

	/sbin/bbx kill $(/sbin/bbx ps | /sbin/bbx grep tf_daemon)
	/sbin/bbx kill $(/sbin/bbx ps | /sbin/bbx grep hdcp-test)

	# mount point / symlink cleanup
	/sbin/bbx rm /sdcard
	/sbin/bbx rm /sdcard-ext

	/sbin/taskset -p -c 0 1
	/sbin/bbx sync
	/sbin/taskset -c 0 /sbin/2nd-init
	exit
fi

# fix the servicemanager service
/sbin/bbx mv /system/bin/servicemanager.bin /system/bin/servicemanager
setprop ctl.stop servicemanager
setprop ctl.stop bootanim
setprop ctl.stop media
setprop ctl.stop zygote
setprop ctl.stop surfaceflinger
setprop ctl.stop drm
sleep 5
setprop ctl.restart servicemanager
setprop ctl.start surfaceflinger
setprop ctl.start zygote
setprop ctl.start media
setprop ctl.start drm

# unmount safestrap partition
/sbin/bbx umount $SS_MNT

/sbin/bbx mount -o remount,ro /system
/sbin/bbx mount -o remount,ro rootfs
/system/bin/$HIJACK_BIN.bin "$@"